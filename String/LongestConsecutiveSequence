[最长连续的序列](https://leetcode.com/problems/longest-consecutive-sequence/description/)


```
Given an unsorted array of integers, find the length of the longest consecutive elements sequence.

Your algorithm should run in O(n) complexity.

Example:

Input: [100, 4, 200, 1, 3, 2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.
```


```
First turn the input into a set of numbers. That takes O(n) and then we can ask in O(1) whether we have a certain number.

Then go through the numbers. If the number x is the start of a streak (i.e., x-1 is not in the set), then test y = x+1, 
x+2, x+3, ... and stop at the first number y not in the set. The length of the streak is then simply y-x and we update our 
global best with that. Since we check each streak only once, this is overall O(n). 
```


```java
class Solution {
    public int longestConsecutive(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }  
        
        Set<Integer> set = new HashSet<>();
        for (int num: nums) {
            set.add(num);
        }
        
        int best = 0;
        for (int num: nums) {
            if (!set.contains(num - 1)) {
                int y = num + 1;
                while (set.contains(y)) {
                    y ++;
                }
                best = Math.max(best, y - num);
            }
        }
        
        return best;
    }
}
```

