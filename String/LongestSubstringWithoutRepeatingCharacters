[最长没有重复子字符串](https://leetcode.com/problems/longest-substring-without-repeating-characters/description/)


```
Given a string, find the length of the longest substring without repeating characters.

Examples:

Given "abcabcbb", the answer is "abc", which the length is 3.

Given "bbbbb", the answer is "b", with the length of 1.

Given "pwwkew", the answer is "wke", with the length of 3. Note that the answer must be a substring, "pwke" is a subsequence 
and not a substring.
```

```
这题思路和window里面最多允许k个0 那题是一样的.
1. Space O(1)做法 左指针往前挪，直到遇到current char为止.   更新：这个方法不行，没有数据结构记录曾经出现过哪些字符
2. 数组/map记录上一次这个字符出现的位置.
```


```java
class Solution {
    public int lengthOfLongestSubstring(String s) {
        int[] indices = new int[256];
        int max = 0, masked = 0;
        for (int i = 0; i < s.length();) {
            char c = s.charAt(i++);
            if (indices[c] != 0) {
                masked = Math.max(indices[c], masked);
            }
            int len = i - masked;
            max = Math.max(len, max);
            indices[c] = i;
        }
        return max;
    }
}
